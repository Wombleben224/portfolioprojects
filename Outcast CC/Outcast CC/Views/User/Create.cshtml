@model Outcast_CC.Models.CreateUserModel

@{
    ViewBag.Title = "Create";
}

  <div class="p-5 m-3 bg-light min-vh-100 d-block">
    <h2>Create User</h2>
    @Html.ValidationSummary(null, new { @class = "text-danger" })
    @using (Html.BeginForm())
    {
      @Html.AntiForgeryToken()
      <div class="form-group">
        @Html.LabelFor(x => x.UserName)
        @Html.EditorFor(x => x.UserName, new { htmlAttributes = new {@class = "form-control", autocomplete = "username"}})
        @Html.ValidationMessageFor(x => x.UserName, null, new { @class = "text-danger"})
      </div>
      <div class="form-group">
        @Html.LabelFor(x => x.Email)
        @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control", autocomplete = "email" } })
        @Html.ValidationMessageFor(x => x.Email, null, new { @class = "text-danger" })
      </div>
      <div class="form-group">
        @Html.LabelFor(x => x.Password)
        @Html.EditorFor(x => x.Password, new { htmlAttributes = new { @class = "form-control", autocomplete = "new-password" } })
        @Html.ValidationMessageFor(x => x.Password, null, new { @class = "text-danger" })
      </div>
      <div class="form-group">
        <button type="submit" class="btn btn-primary">Create</button>
        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary"})
      </div>
    }

    <div>
      @Html.ActionLink("Back to List", "Index")
    </div>
  </div>